import copy


class MyQueue:
    # class constants
    MAX_SIZE = 1000
    DEFAULT_SIZE = 10
    EMPTY_QUEUE_ALERT = "**Queue is empty**"
    ORIG_DEFUALT_ITEM = ""
    default_item = ORIG_DEFAULT_ITEM
    
    def __init__(self, size=DEFAULT_SIZE, default_item=None)
        self.que = []
        self.toq = 0
        if not self.set_size(size):
            self.size = MyQueue.DEFAULT_SIZE
        if default_item is not None:
            self.default_item = default_item
    
# mutators-----------------------------------
    def set_size(self, size):
        if not valid_size(size):
            return False
        # else    
        self.size = size
        clear()
        
    def add(self, default_item):
        if not valid_item(default_item):
            return False
        
    def remove(self):
        pass
    
# class/static methods-----------------------
    @classmethod
    def validate_size(self, test_size):
        if not 0 <= test_size <= cls.MAX_SIZE:
            return False
        elif type(test_size) != type(self.size):
            return False
        else:
            return True
    
    @classmethod
    def set_default_item(cls, new_default):
        cls.default_item = new_default
